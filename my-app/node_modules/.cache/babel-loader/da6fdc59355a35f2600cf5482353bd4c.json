{"ast":null,"code":"var Flatted = function (Primitive, primitive) {\n  /*!\n   * ISC License\n   *\n   * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n   *\n   * Permission to use, copy, modify, and/or distribute this software for any\n   * purpose with or without fee is hereby granted, provided that the above\n   * copyright notice and this permission notice appear in all copies.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n   * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n   * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n   * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n   * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n   * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   * PERFORMANCE OF THIS SOFTWARE.\n   */\n  var Flatted = {\n    parse: function parse(text, reviver) {\n      var input = JSON.parse(text, Primitives).map(primitives);\n      var value = input[0];\n      var $ = reviver || noop;\n      var tmp = typeof value === 'object' && value ? revive(input, new Set(), value, $) : value;\n      return $.call({\n        '': tmp\n      }, '', tmp);\n    },\n    stringify: function stringify(value, replacer, space) {\n      for (var firstRun, known = new Map(), input = [], output = [], $ = replacer && typeof replacer === typeof input ? function (k, v) {\n        if (k === '' || -1 < replacer.indexOf(k)) return v;\n      } : replacer || noop, i = +set(known, input, $.call({\n        '': value\n      }, '', value)), replace = function (key, value) {\n        if (firstRun) {\n          firstRun = !firstRun;\n          return value;\n        }\n\n        var after = $.call(this, key, value);\n\n        switch (typeof after) {\n          case 'object':\n            if (after === null) return after;\n\n          case primitive:\n            return known.get(after) || set(known, input, after);\n        }\n\n        return after;\n      }; i < input.length; i++) {\n        firstRun = true;\n        output[i] = JSON.stringify(input[i], replace, space);\n      }\n\n      return '[' + output.join(',') + ']';\n    }\n  };\n  return Flatted;\n\n  function noop(key, value) {\n    return value;\n  }\n\n  function revive(input, parsed, output, $) {\n    return Object.keys(output).reduce(function (output, key) {\n      var value = output[key];\n\n      if (value instanceof Primitive) {\n        var tmp = input[value];\n\n        if (typeof tmp === 'object' && !parsed.has(tmp)) {\n          parsed.add(tmp);\n          output[key] = $.call(output, key, revive(input, parsed, tmp, $));\n        } else {\n          output[key] = $.call(output, key, tmp);\n        }\n      } else output[key] = $.call(output, key, value);\n\n      return output;\n    }, output);\n  }\n\n  function set(known, input, value) {\n    var index = Primitive(input.push(value) - 1);\n    known.set(value, index);\n    return index;\n  } // the two kinds of primitives\n  //  1. the real one\n  //  2. the wrapped one\n\n\n  function primitives(value) {\n    return value instanceof Primitive ? Primitive(value) : value;\n  }\n\n  function Primitives(key, value) {\n    return typeof value === primitive ? new Primitive(value) : value;\n  }\n}(String, 'string');\n\nexport default Flatted;\nexport var parse = Flatted.parse;\nexport var stringify = Flatted.stringify;","map":{"version":3,"sources":["/Users/osurihimeshkrishna/Downloads/Academics/8th Semester/Software Production Engineering/spe_finalproject/my-app/node_modules/log4js/node_modules/flatted/esm/index.js"],"names":["Flatted","Primitive","primitive","parse","text","reviver","input","JSON","Primitives","map","primitives","value","$","noop","tmp","revive","Set","call","stringify","replacer","space","firstRun","known","Map","output","k","v","indexOf","i","set","replace","key","after","get","length","join","parsed","Object","keys","reduce","has","add","index","push","String"],"mappings":"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","sourcesContent":["var Flatted = (function (Primitive, primitive) {\n\n  /*!\n   * ISC License\n   *\n   * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n   *\n   * Permission to use, copy, modify, and/or distribute this software for any\n   * purpose with or without fee is hereby granted, provided that the above\n   * copyright notice and this permission notice appear in all copies.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n   * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n   * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n   * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n   * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n   * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   * PERFORMANCE OF THIS SOFTWARE.\n   */\n\n  var Flatted = {\n\n    parse: function parse(text, reviver) {\n      var input = JSON.parse(text, Primitives).map(primitives);\n      var value = input[0];\n      var $ = reviver || noop;\n      var tmp = typeof value === 'object' && value ?\n                  revive(input, new Set, value, $) :\n                  value;\n      return $.call({'': tmp}, '', tmp);\n    },\n\n    stringify: function stringify(value, replacer, space) {\n      for (var\n        firstRun,\n        known = new Map,\n        input = [],\n        output = [],\n        $ = replacer && typeof replacer === typeof input ?\n              function (k, v) {\n                if (k === '' || -1 < replacer.indexOf(k)) return v;\n              } :\n              (replacer || noop),\n        i = +set(known, input, $.call({'': value}, '', value)),\n        replace = function (key, value) {\n          if (firstRun) {\n            firstRun = !firstRun;\n            return value;\n          }\n          var after = $.call(this, key, value);\n          switch (typeof after) {\n            case 'object':\n              if (after === null) return after;\n            case primitive:\n              return known.get(after) || set(known, input, after);\n          }\n          return after;\n        };\n        i < input.length; i++\n      ) {\n        firstRun = true;\n        output[i] = JSON.stringify(input[i], replace, space);\n      }\n      return '[' + output.join(',') + ']';\n    }\n\n  };\n\n  return Flatted;\n\n  function noop(key, value) {\n    return value;\n  }\n\n  function revive(input, parsed, output, $) {\n    return Object.keys(output).reduce(\n      function (output, key) {\n        var value = output[key];\n        if (value instanceof Primitive) {\n          var tmp = input[value];\n          if (typeof tmp === 'object' && !parsed.has(tmp)) {\n            parsed.add(tmp);\n            output[key] = $.call(output, key, revive(input, parsed, tmp, $));\n          } else {\n            output[key] = $.call(output, key, tmp);\n          }\n        } else\n          output[key] = $.call(output, key, value);\n        return output;\n      },\n      output\n    );\n  }\n\n  function set(known, input, value) {\n    var index = Primitive(input.push(value) - 1);\n    known.set(value, index);\n    return index;\n  }\n\n  // the two kinds of primitives\n  //  1. the real one\n  //  2. the wrapped one\n\n  function primitives(value) {\n    return value instanceof Primitive ? Primitive(value) : value;\n  }\n\n  function Primitives(key, value) {\n    return typeof value === primitive ? new Primitive(value) : value;\n  }\n\n}(String, 'string'));\nexport default Flatted;\nexport var parse = Flatted.parse;\nexport var stringify = Flatted.stringify;\n"]},"metadata":{},"sourceType":"module"}