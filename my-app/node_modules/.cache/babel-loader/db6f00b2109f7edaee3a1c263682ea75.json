{"ast":null,"code":"const RollingFileWriteStream = require('./RollingFileWriteStream'); // just to adapt the previous version\n\n\nclass RollingFileStream extends RollingFileWriteStream {\n  constructor(filename, size, backups, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (size) {\n      options.maxSize = size;\n    }\n\n    if (!backups) {\n      backups = 1;\n    }\n\n    options.numToKeep = backups;\n    super(filename, options);\n    this.backups = this.options.numToKeep;\n    this.size = this.options.maxSize;\n  }\n\n  get theStream() {\n    return this.currentFileStream;\n  }\n\n}\n\nmodule.exports = RollingFileStream;","map":{"version":3,"sources":["/Users/osurihimeshkrishna/Downloads/Academics/8th Semester/Software Production Engineering/spe_finalproject/my-app/node_modules/streamroller/lib/RollingFileStream.js"],"names":["RollingFileWriteStream","require","RollingFileStream","constructor","filename","size","backups","options","maxSize","numToKeep","theStream","currentFileStream","module","exports"],"mappings":"AAAA,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,0BAAD,CAAtC,C,CAEA;;;AACA,MAAMC,iBAAN,SAAgCF,sBAAhC,CAAuD;AACrDG,EAAAA,WAAW,CAACC,QAAD,EAAWC,IAAX,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;AAC5C,QAAI,CAACA,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG,EAAV;AACD;;AACD,QAAIF,IAAJ,EAAU;AACRE,MAAAA,OAAO,CAACC,OAAR,GAAkBH,IAAlB;AACD;;AACD,QAAI,CAACC,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG,CAAV;AACD;;AACDC,IAAAA,OAAO,CAACE,SAAR,GAAoBH,OAApB;AACA,UAAMF,QAAN,EAAgBG,OAAhB;AACA,SAAKD,OAAL,GAAe,KAAKC,OAAL,CAAaE,SAA5B;AACA,SAAKJ,IAAL,GAAY,KAAKE,OAAL,CAAaC,OAAzB;AACD;;AAEY,MAATE,SAAS,GAAG;AACd,WAAO,KAAKC,iBAAZ;AACD;;AAnBoD;;AAuBvDC,MAAM,CAACC,OAAP,GAAiBX,iBAAjB","sourcesContent":["const RollingFileWriteStream = require('./RollingFileWriteStream');\n\n// just to adapt the previous version\nclass RollingFileStream extends RollingFileWriteStream {\n  constructor(filename, size, backups, options) {\n    if (!options) {\n      options = {};\n    }\n    if (size) {\n      options.maxSize = size;\n    }\n    if (!backups) {\n      backups = 1;\n    }\n    options.numToKeep = backups;\n    super(filename, options);\n    this.backups = this.options.numToKeep;\n    this.size = this.options.maxSize;\n  }\n\n  get theStream() {\n    return this.currentFileStream;\n  }\n\n}\n\nmodule.exports = RollingFileStream;\n"]},"metadata":{},"sourceType":"script"}