{"ast":null,"code":"/* eslint-disable no-plusplus */\nconst levels = require(\"./levels\");\n\nconst DEFAULT_FORMAT = \":remote-addr - -\" + ' \":method :url HTTP/:http-version\"' + ' :status :content-length \":referrer\"' + ' \":user-agent\"';\n/**\n * Return request url path,\n * adding this function prevents the Cyclomatic Complexity,\n * for the assemble_tokens function at low, to pass the tests.\n *\n * @param  {IncomingMessage} req\n * @return {string}\n * @api private\n */\n\nfunction getUrl(req) {\n  return req.originalUrl || req.url;\n}\n/**\n * Adds custom {token, replacement} objects to defaults,\n * overwriting the defaults if any tokens clash\n *\n * @param  {IncomingMessage} req\n * @param  {ServerResponse} res\n * @param  {Array} customTokens\n *    [{ token: string-or-regexp, replacement: string-or-replace-function }]\n * @return {Array}\n */\n\n\nfunction assembleTokens(req, res, customTokens) {\n  const arrayUniqueTokens = array => {\n    const a = array.concat();\n\n    for (let i = 0; i < a.length; ++i) {\n      for (let j = i + 1; j < a.length; ++j) {\n        // not === because token can be regexp object\n\n        /* eslint eqeqeq:0 */\n        if (a[i].token == a[j].token) {\n          a.splice(j--, 1);\n        }\n      }\n    }\n\n    return a;\n  };\n\n  const defaultTokens = [];\n  defaultTokens.push({\n    token: \":url\",\n    replacement: getUrl(req)\n  });\n  defaultTokens.push({\n    token: \":protocol\",\n    replacement: req.protocol\n  });\n  defaultTokens.push({\n    token: \":hostname\",\n    replacement: req.hostname\n  });\n  defaultTokens.push({\n    token: \":method\",\n    replacement: req.method\n  });\n  defaultTokens.push({\n    token: \":status\",\n    replacement: res.__statusCode || res.statusCode\n  });\n  defaultTokens.push({\n    token: \":response-time\",\n    replacement: res.responseTime\n  });\n  defaultTokens.push({\n    token: \":date\",\n    replacement: new Date().toUTCString()\n  });\n  defaultTokens.push({\n    token: \":referrer\",\n    replacement: req.headers.referer || req.headers.referrer || \"\"\n  });\n  defaultTokens.push({\n    token: \":http-version\",\n    replacement: `${req.httpVersionMajor}.${req.httpVersionMinor}`\n  });\n  defaultTokens.push({\n    token: \":remote-addr\",\n    replacement: req.headers[\"x-forwarded-for\"] || req.ip || req._remoteAddress || req.socket && (req.socket.remoteAddress || req.socket.socket && req.socket.socket.remoteAddress)\n  });\n  defaultTokens.push({\n    token: \":user-agent\",\n    replacement: req.headers[\"user-agent\"]\n  });\n  defaultTokens.push({\n    token: \":content-length\",\n    replacement: res.getHeader(\"content-length\") || res.__headers && res.__headers[\"Content-Length\"] || \"-\"\n  });\n  defaultTokens.push({\n    token: /:req\\[([^\\]]+)]/g,\n\n    replacement(_, field) {\n      return req.headers[field.toLowerCase()];\n    }\n\n  });\n  defaultTokens.push({\n    token: /:res\\[([^\\]]+)]/g,\n\n    replacement(_, field) {\n      return res.getHeader(field.toLowerCase()) || res.__headers && res.__headers[field];\n    }\n\n  });\n  return arrayUniqueTokens(customTokens.concat(defaultTokens));\n}\n/**\n * Return formatted log line.\n *\n * @param  {string} str\n * @param {Array} tokens\n * @return {string}\n * @api private\n */\n\n\nfunction format(str, tokens) {\n  for (let i = 0; i < tokens.length; i++) {\n    str = str.replace(tokens[i].token, tokens[i].replacement);\n  }\n\n  return str;\n}\n/**\n * Return RegExp Object about nolog\n *\n * @param  {(string|Array)} nolog\n * @return {RegExp}\n * @api private\n *\n * syntax\n *  1. String\n *   1.1 \"\\\\.gif\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.gif?fuga\n *         LOGGING http://example.com/hoge.agif\n *   1.2 in \"\\\\.gif|\\\\.jpg$\"\n *         NOT LOGGING http://example.com/hoge.gif and\n *           http://example.com/hoge.gif?fuga and http://example.com/hoge.jpg?fuga\n *         LOGGING http://example.com/hoge.agif,\n *           http://example.com/hoge.ajpg and http://example.com/hoge.jpg?hoge\n *   1.3 in \"\\\\.(gif|jpe?g|png)$\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.jpeg\n *         LOGGING http://example.com/hoge.gif?uid=2 and http://example.com/hoge.jpg?pid=3\n *  2. RegExp\n *   2.1 in /\\.(gif|jpe?g|png)$/\n *         SAME AS 1.3\n *  3. Array\n *   3.1 [\"\\\\.jpg$\", \"\\\\.png\", \"\\\\.gif\"]\n *         SAME AS \"\\\\.jpg|\\\\.png|\\\\.gif\"\n */\n\n\nfunction createNoLogCondition(nolog) {\n  let regexp = null;\n\n  if (nolog instanceof RegExp) {\n    regexp = nolog;\n  }\n\n  if (typeof nolog === \"string\") {\n    regexp = new RegExp(nolog);\n  }\n\n  if (Array.isArray(nolog)) {\n    // convert to strings\n    const regexpsAsStrings = nolog.map(reg => reg.source ? reg.source : reg);\n    regexp = new RegExp(regexpsAsStrings.join(\"|\"));\n  }\n\n  return regexp;\n}\n/**\n * Allows users to define rules around status codes to assign them to a specific\n * logging level.\n * There are two types of rules:\n *   - RANGE: matches a code within a certain range\n *     E.g. { 'from': 200, 'to': 299, 'level': 'info' }\n *   - CONTAINS: matches a code to a set of expected codes\n *     E.g. { 'codes': [200, 203], 'level': 'debug' }\n * Note*: Rules are respected only in order of prescendence.\n *\n * @param {Number} statusCode\n * @param {Level} currentLevel\n * @param {Object} ruleSet\n * @return {Level}\n * @api private\n */\n\n\nfunction matchRules(statusCode, currentLevel, ruleSet) {\n  let level = currentLevel;\n\n  if (ruleSet) {\n    const matchedRule = ruleSet.find(rule => {\n      let ruleMatched = false;\n\n      if (rule.from && rule.to) {\n        ruleMatched = statusCode >= rule.from && statusCode <= rule.to;\n      } else {\n        ruleMatched = rule.codes.indexOf(statusCode) !== -1;\n      }\n\n      return ruleMatched;\n    });\n\n    if (matchedRule) {\n      level = levels.getLevel(matchedRule.level, level);\n    }\n  }\n\n  return level;\n}\n/**\n * Log requests with the given `options` or a `format` string.\n *\n * Options:\n *\n *   - `format`        Format string, see below for tokens\n *   - `level`         A log4js levels instance. Supports also 'auto'\n *   - `nolog`         A string or RegExp to exclude target logs\n *   - `statusRules`   A array of rules for setting specific logging levels base on status codes\n *   - `context`       Whether to add a response of express to the context\n *\n * Tokens:\n *\n *   - `:req[header]` ex: `:req[Accept]`\n *   - `:res[header]` ex: `:res[Content-Length]`\n *   - `:http-version`\n *   - `:response-time`\n *   - `:remote-addr`\n *   - `:date`\n *   - `:method`\n *   - `:url`\n *   - `:referrer`\n *   - `:user-agent`\n *   - `:status`\n *\n * @return {Function}\n * @param logger4js\n * @param options\n * @api public\n */\n\n\nmodule.exports = function getLogger(logger4js, options) {\n  /* eslint no-underscore-dangle:0 */\n  if (typeof options === \"string\" || typeof options === \"function\") {\n    options = {\n      format: options\n    };\n  } else {\n    options = options || {};\n  }\n\n  const thisLogger = logger4js;\n  let level = levels.getLevel(options.level, levels.INFO);\n  const fmt = options.format || DEFAULT_FORMAT;\n  const nolog = createNoLogCondition(options.nolog);\n  return (req, res, next) => {\n    // mount safety\n    if (req._logging) return next(); // nologs\n\n    if (nolog && nolog.test(req.originalUrl)) return next();\n\n    if (thisLogger.isLevelEnabled(level) || options.level === \"auto\") {\n      const start = new Date();\n      const {\n        writeHead\n      } = res; // flag as logging\n\n      req._logging = true; // proxy for statusCode.\n\n      res.writeHead = (code, headers) => {\n        res.writeHead = writeHead;\n        res.writeHead(code, headers);\n        res.__statusCode = code;\n        res.__headers = headers || {};\n      }; // hook on end request to emit the log entry of the HTTP request.\n\n\n      res.on(\"finish\", () => {\n        res.responseTime = new Date() - start; // status code response level handling\n\n        if (res.statusCode && options.level === \"auto\") {\n          level = levels.INFO;\n          if (res.statusCode >= 300) level = levels.WARN;\n          if (res.statusCode >= 400) level = levels.ERROR;\n        }\n\n        level = matchRules(res.statusCode, level, options.statusRules);\n        const combinedTokens = assembleTokens(req, res, options.tokens || []);\n        if (options.context) thisLogger.addContext(\"res\", res);\n\n        if (typeof fmt === \"function\") {\n          const line = fmt(req, res, str => format(str, combinedTokens));\n          if (line) thisLogger.log(level, line);\n        } else {\n          thisLogger.log(level, format(fmt, combinedTokens));\n        }\n\n        if (options.context) thisLogger.removeContext(\"res\");\n      });\n    } // ensure next gets always called\n\n\n    return next();\n  };\n};","map":{"version":3,"sources":["/Users/osurihimeshkrishna/Downloads/Academics/8th Semester/Software Production Engineering/spe_finalproject/my-app/node_modules/log4js/lib/connect-logger.js"],"names":["levels","require","DEFAULT_FORMAT","getUrl","req","originalUrl","url","assembleTokens","res","customTokens","arrayUniqueTokens","array","a","concat","i","length","j","token","splice","defaultTokens","push","replacement","protocol","hostname","method","__statusCode","statusCode","responseTime","Date","toUTCString","headers","referer","referrer","httpVersionMajor","httpVersionMinor","ip","_remoteAddress","socket","remoteAddress","getHeader","__headers","_","field","toLowerCase","format","str","tokens","replace","createNoLogCondition","nolog","regexp","RegExp","Array","isArray","regexpsAsStrings","map","reg","source","join","matchRules","currentLevel","ruleSet","level","matchedRule","find","rule","ruleMatched","from","to","codes","indexOf","getLevel","module","exports","getLogger","logger4js","options","thisLogger","INFO","fmt","next","_logging","test","isLevelEnabled","start","writeHead","code","on","WARN","ERROR","statusRules","combinedTokens","context","addContext","line","log","removeContext"],"mappings":"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","sourcesContent":["/* eslint-disable no-plusplus */\n\nconst levels = require(\"./levels\");\n\nconst DEFAULT_FORMAT =\n  \":remote-addr - -\" +\n  ' \":method :url HTTP/:http-version\"' +\n  ' :status :content-length \":referrer\"' +\n  ' \":user-agent\"';\n\n/**\n * Return request url path,\n * adding this function prevents the Cyclomatic Complexity,\n * for the assemble_tokens function at low, to pass the tests.\n *\n * @param  {IncomingMessage} req\n * @return {string}\n * @api private\n */\nfunction getUrl(req) {\n  return req.originalUrl || req.url;\n}\n\n/**\n * Adds custom {token, replacement} objects to defaults,\n * overwriting the defaults if any tokens clash\n *\n * @param  {IncomingMessage} req\n * @param  {ServerResponse} res\n * @param  {Array} customTokens\n *    [{ token: string-or-regexp, replacement: string-or-replace-function }]\n * @return {Array}\n */\nfunction assembleTokens(req, res, customTokens) {\n  const arrayUniqueTokens = array => {\n    const a = array.concat();\n    for (let i = 0; i < a.length; ++i) {\n      for (let j = i + 1; j < a.length; ++j) {\n        // not === because token can be regexp object\n        /* eslint eqeqeq:0 */\n        if (a[i].token == a[j].token) {\n          a.splice(j--, 1);\n        }\n      }\n    }\n    return a;\n  };\n\n  const defaultTokens = [];\n  defaultTokens.push({ token: \":url\", replacement: getUrl(req) });\n  defaultTokens.push({ token: \":protocol\", replacement: req.protocol });\n  defaultTokens.push({ token: \":hostname\", replacement: req.hostname });\n  defaultTokens.push({ token: \":method\", replacement: req.method });\n  defaultTokens.push({\n    token: \":status\",\n    replacement: res.__statusCode || res.statusCode\n  });\n  defaultTokens.push({\n    token: \":response-time\",\n    replacement: res.responseTime\n  });\n  defaultTokens.push({ token: \":date\", replacement: new Date().toUTCString() });\n  defaultTokens.push({\n    token: \":referrer\",\n    replacement: req.headers.referer || req.headers.referrer || \"\"\n  });\n  defaultTokens.push({\n    token: \":http-version\",\n    replacement: `${req.httpVersionMajor}.${req.httpVersionMinor}`\n  });\n  defaultTokens.push({\n    token: \":remote-addr\",\n    replacement:\n      req.headers[\"x-forwarded-for\"] ||\n      req.ip ||\n      req._remoteAddress ||\n      (req.socket &&\n        (req.socket.remoteAddress ||\n          (req.socket.socket && req.socket.socket.remoteAddress)))\n  });\n  defaultTokens.push({\n    token: \":user-agent\",\n    replacement: req.headers[\"user-agent\"]\n  });\n  defaultTokens.push({\n    token: \":content-length\",\n    replacement:\n      res.getHeader(\"content-length\") ||\n      (res.__headers && res.__headers[\"Content-Length\"]) ||\n      \"-\"\n  });\n  defaultTokens.push({\n    token: /:req\\[([^\\]]+)]/g,\n    replacement(_, field) {\n      return req.headers[field.toLowerCase()];\n    }\n  });\n  defaultTokens.push({\n    token: /:res\\[([^\\]]+)]/g,\n    replacement(_, field) {\n      return (\n        res.getHeader(field.toLowerCase()) ||\n        (res.__headers && res.__headers[field])\n      );\n    }\n  });\n\n  return arrayUniqueTokens(customTokens.concat(defaultTokens));\n}\n\n/**\n * Return formatted log line.\n *\n * @param  {string} str\n * @param {Array} tokens\n * @return {string}\n * @api private\n */\nfunction format(str, tokens) {\n  for (let i = 0; i < tokens.length; i++) {\n    str = str.replace(tokens[i].token, tokens[i].replacement);\n  }\n  return str;\n}\n\n/**\n * Return RegExp Object about nolog\n *\n * @param  {(string|Array)} nolog\n * @return {RegExp}\n * @api private\n *\n * syntax\n *  1. String\n *   1.1 \"\\\\.gif\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.gif?fuga\n *         LOGGING http://example.com/hoge.agif\n *   1.2 in \"\\\\.gif|\\\\.jpg$\"\n *         NOT LOGGING http://example.com/hoge.gif and\n *           http://example.com/hoge.gif?fuga and http://example.com/hoge.jpg?fuga\n *         LOGGING http://example.com/hoge.agif,\n *           http://example.com/hoge.ajpg and http://example.com/hoge.jpg?hoge\n *   1.3 in \"\\\\.(gif|jpe?g|png)$\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.jpeg\n *         LOGGING http://example.com/hoge.gif?uid=2 and http://example.com/hoge.jpg?pid=3\n *  2. RegExp\n *   2.1 in /\\.(gif|jpe?g|png)$/\n *         SAME AS 1.3\n *  3. Array\n *   3.1 [\"\\\\.jpg$\", \"\\\\.png\", \"\\\\.gif\"]\n *         SAME AS \"\\\\.jpg|\\\\.png|\\\\.gif\"\n */\nfunction createNoLogCondition(nolog) {\n  let regexp = null;\n\n  if (nolog instanceof RegExp) {\n    regexp = nolog;\n  }\n\n  if (typeof nolog === \"string\") {\n    regexp = new RegExp(nolog);\n  }\n\n  if (Array.isArray(nolog)) {\n    // convert to strings\n    const regexpsAsStrings = nolog.map(reg => (reg.source ? reg.source : reg));\n    regexp = new RegExp(regexpsAsStrings.join(\"|\"));\n  }\n\n  return regexp;\n}\n\n/**\n * Allows users to define rules around status codes to assign them to a specific\n * logging level.\n * There are two types of rules:\n *   - RANGE: matches a code within a certain range\n *     E.g. { 'from': 200, 'to': 299, 'level': 'info' }\n *   - CONTAINS: matches a code to a set of expected codes\n *     E.g. { 'codes': [200, 203], 'level': 'debug' }\n * Note*: Rules are respected only in order of prescendence.\n *\n * @param {Number} statusCode\n * @param {Level} currentLevel\n * @param {Object} ruleSet\n * @return {Level}\n * @api private\n */\nfunction matchRules(statusCode, currentLevel, ruleSet) {\n  let level = currentLevel;\n\n  if (ruleSet) {\n    const matchedRule = ruleSet.find(rule => {\n      let ruleMatched = false;\n      if (rule.from && rule.to) {\n        ruleMatched = statusCode >= rule.from && statusCode <= rule.to;\n      } else {\n        ruleMatched = rule.codes.indexOf(statusCode) !== -1;\n      }\n      return ruleMatched;\n    });\n    if (matchedRule) {\n      level = levels.getLevel(matchedRule.level, level);\n    }\n  }\n  return level;\n}\n\n/**\n * Log requests with the given `options` or a `format` string.\n *\n * Options:\n *\n *   - `format`        Format string, see below for tokens\n *   - `level`         A log4js levels instance. Supports also 'auto'\n *   - `nolog`         A string or RegExp to exclude target logs\n *   - `statusRules`   A array of rules for setting specific logging levels base on status codes\n *   - `context`       Whether to add a response of express to the context\n *\n * Tokens:\n *\n *   - `:req[header]` ex: `:req[Accept]`\n *   - `:res[header]` ex: `:res[Content-Length]`\n *   - `:http-version`\n *   - `:response-time`\n *   - `:remote-addr`\n *   - `:date`\n *   - `:method`\n *   - `:url`\n *   - `:referrer`\n *   - `:user-agent`\n *   - `:status`\n *\n * @return {Function}\n * @param logger4js\n * @param options\n * @api public\n */\nmodule.exports = function getLogger(logger4js, options) {\n  /* eslint no-underscore-dangle:0 */\n  if (typeof options === \"string\" || typeof options === \"function\") {\n    options = { format: options };\n  } else {\n    options = options || {};\n  }\n\n  const thisLogger = logger4js;\n  let level = levels.getLevel(options.level, levels.INFO);\n  const fmt = options.format || DEFAULT_FORMAT;\n  const nolog = createNoLogCondition(options.nolog);\n\n  return (req, res, next) => {\n    // mount safety\n    if (req._logging) return next();\n\n    // nologs\n    if (nolog && nolog.test(req.originalUrl)) return next();\n\n    if (thisLogger.isLevelEnabled(level) || options.level === \"auto\") {\n      const start = new Date();\n      const { writeHead } = res;\n\n      // flag as logging\n      req._logging = true;\n\n      // proxy for statusCode.\n      res.writeHead = (code, headers) => {\n        res.writeHead = writeHead;\n        res.writeHead(code, headers);\n\n        res.__statusCode = code;\n        res.__headers = headers || {};\n      };\n\n      // hook on end request to emit the log entry of the HTTP request.\n      res.on(\"finish\", () => {\n        res.responseTime = new Date() - start;\n        // status code response level handling\n        if (res.statusCode && options.level === \"auto\") {\n          level = levels.INFO;\n          if (res.statusCode >= 300) level = levels.WARN;\n          if (res.statusCode >= 400) level = levels.ERROR;\n        }\n        level = matchRules(res.statusCode, level, options.statusRules);\n\n        const combinedTokens = assembleTokens(req, res, options.tokens || []);\n\n        if (options.context) thisLogger.addContext(\"res\", res);\n        if (typeof fmt === \"function\") {\n          const line = fmt(req, res, str => format(str, combinedTokens));\n          if (line) thisLogger.log(level, line);\n        } else {\n          thisLogger.log(level, format(fmt, combinedTokens));\n        }\n        if (options.context) thisLogger.removeContext(\"res\");\n      });\n    }\n\n    // ensure next gets always called\n    return next();\n  };\n};\n"]},"metadata":{},"sourceType":"script"}