{"ast":null,"code":"function logLevelFilter(minLevelString, maxLevelString, appender, levels) {\n  const minLevel = levels.getLevel(minLevelString);\n  const maxLevel = levels.getLevel(maxLevelString, levels.FATAL);\n  return logEvent => {\n    const eventLevel = logEvent.level;\n\n    if (eventLevel.isGreaterThanOrEqualTo(minLevel) && eventLevel.isLessThanOrEqualTo(maxLevel)) {\n      appender(logEvent);\n    }\n  };\n}\n\nfunction configure(config, layouts, findAppender, levels) {\n  const appender = findAppender(config.appender);\n  return logLevelFilter(config.level, config.maxLevel, appender, levels);\n}\n\nmodule.exports.configure = configure;","map":{"version":3,"sources":["/Users/osurihimeshkrishna/Downloads/Academics/8th Semester/Software Production Engineering/spe_finalproject/my-app/node_modules/log4js/lib/appenders/logLevelFilter.js"],"names":["logLevelFilter","minLevelString","maxLevelString","appender","levels","minLevel","getLevel","maxLevel","FATAL","logEvent","eventLevel","level","isGreaterThanOrEqualTo","isLessThanOrEqualTo","configure","config","layouts","findAppender","module","exports"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,QAAxD,EAAkEC,MAAlE,EAA0E;AACxE,QAAMC,QAAQ,GAAGD,MAAM,CAACE,QAAP,CAAgBL,cAAhB,CAAjB;AACA,QAAMM,QAAQ,GAAGH,MAAM,CAACE,QAAP,CAAgBJ,cAAhB,EAAgCE,MAAM,CAACI,KAAvC,CAAjB;AACA,SAAQC,QAAD,IAAc;AACnB,UAAMC,UAAU,GAAGD,QAAQ,CAACE,KAA5B;;AACA,QAAID,UAAU,CAACE,sBAAX,CAAkCP,QAAlC,KAA+CK,UAAU,CAACG,mBAAX,CAA+BN,QAA/B,CAAnD,EAA6F;AAC3FJ,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACD;AACF,GALD;AAMD;;AAED,SAASK,SAAT,CAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,YAApC,EAAkDb,MAAlD,EAA0D;AACxD,QAAMD,QAAQ,GAAGc,YAAY,CAACF,MAAM,CAACZ,QAAR,CAA7B;AACA,SAAOH,cAAc,CAACe,MAAM,CAACJ,KAAR,EAAeI,MAAM,CAACR,QAAtB,EAAgCJ,QAAhC,EAA0CC,MAA1C,CAArB;AACD;;AAEDc,MAAM,CAACC,OAAP,CAAeL,SAAf,GAA2BA,SAA3B","sourcesContent":["function logLevelFilter(minLevelString, maxLevelString, appender, levels) {\n  const minLevel = levels.getLevel(minLevelString);\n  const maxLevel = levels.getLevel(maxLevelString, levels.FATAL);\n  return (logEvent) => {\n    const eventLevel = logEvent.level;\n    if (eventLevel.isGreaterThanOrEqualTo(minLevel) && eventLevel.isLessThanOrEqualTo(maxLevel)) {\n      appender(logEvent);\n    }\n  };\n}\n\nfunction configure(config, layouts, findAppender, levels) {\n  const appender = findAppender(config.appender);\n  return logLevelFilter(config.level, config.maxLevel, appender, levels);\n}\n\nmodule.exports.configure = configure;\n"]},"metadata":{},"sourceType":"script"}