{"ast":null,"code":"\"use strict\";\n\nfunction padWithZeros(vNumber, width) {\n  var numAsString = vNumber.toString();\n\n  while (numAsString.length < width) {\n    numAsString = \"0\" + numAsString;\n  }\n\n  return numAsString;\n}\n\nfunction addZero(vNumber) {\n  return padWithZeros(vNumber, 2);\n}\n/**\n * Formats the TimeOffset\n * Thanks to http://www.svendtofte.com/code/date_format/\n * @private\n */\n\n\nfunction offset(timezoneOffset) {\n  var os = Math.abs(timezoneOffset);\n  var h = String(Math.floor(os / 60));\n  var m = String(os % 60);\n\n  if (h.length === 1) {\n    h = \"0\" + h;\n  }\n\n  if (m.length === 1) {\n    m = \"0\" + m;\n  }\n\n  return timezoneOffset < 0 ? \"+\" + h + m : \"-\" + h + m;\n}\n\nfunction datePart(date, displayUTC, part) {\n  return displayUTC ? date[\"getUTC\" + part]() : date[\"get\" + part]();\n}\n\nfunction asString(format, date) {\n  if (typeof format !== \"string\") {\n    date = format;\n    format = module.exports.ISO8601_FORMAT;\n  }\n\n  if (!date) {\n    date = module.exports.now();\n  }\n\n  var displayUTC = format.indexOf(\"O\") > -1;\n  var vDay = addZero(datePart(date, displayUTC, \"Date\"));\n  var vMonth = addZero(datePart(date, displayUTC, \"Month\") + 1);\n  var vYearLong = addZero(datePart(date, displayUTC, \"FullYear\"));\n  var vYearShort = addZero(vYearLong.substring(2, 4));\n  var vYear = format.indexOf(\"yyyy\") > -1 ? vYearLong : vYearShort;\n  var vHour = addZero(datePart(date, displayUTC, \"Hours\"));\n  var vMinute = addZero(datePart(date, displayUTC, \"Minutes\"));\n  var vSecond = addZero(datePart(date, displayUTC, \"Seconds\"));\n  var vMillisecond = padWithZeros(datePart(date, displayUTC, \"Milliseconds\"), 3);\n  var vTimeZone = offset(date.getTimezoneOffset());\n  var formatted = format.replace(/dd/g, vDay).replace(/MM/g, vMonth).replace(/y{1,4}/g, vYear).replace(/hh/g, vHour).replace(/mm/g, vMinute).replace(/ss/g, vSecond).replace(/SSS/g, vMillisecond).replace(/O/g, vTimeZone);\n  return formatted;\n}\n\nfunction extractDateParts(pattern, str, missingValuesDate) {\n  var matchers = [{\n    pattern: /y{1,4}/,\n    regexp: \"\\\\d{1,4}\",\n    fn: function (date, value) {\n      date.setFullYear(value);\n    }\n  }, {\n    pattern: /MM/,\n    regexp: \"\\\\d{1,2}\",\n    fn: function (date, value) {\n      date.setMonth(value - 1);\n    }\n  }, {\n    pattern: /dd/,\n    regexp: \"\\\\d{1,2}\",\n    fn: function (date, value) {\n      date.setDate(value);\n    }\n  }, {\n    pattern: /hh/,\n    regexp: \"\\\\d{1,2}\",\n    fn: function (date, value) {\n      date.setHours(value);\n    }\n  }, {\n    pattern: /mm/,\n    regexp: \"\\\\d\\\\d\",\n    fn: function (date, value) {\n      date.setMinutes(value);\n    }\n  }, {\n    pattern: /ss/,\n    regexp: \"\\\\d\\\\d\",\n    fn: function (date, value) {\n      date.setSeconds(value);\n    }\n  }, {\n    pattern: /SSS/,\n    regexp: \"\\\\d\\\\d\\\\d\",\n    fn: function (date, value) {\n      date.setMilliseconds(value);\n    }\n  }, {\n    pattern: /O/,\n    regexp: \"[+-]\\\\d{3,4}|Z\",\n    fn: function (date, value) {\n      if (value === \"Z\") {\n        value = 0;\n      }\n\n      var offset = Math.abs(value);\n      var minutes = offset % 100 + Math.floor(offset / 100) * 60;\n      date.setMinutes(date.getMinutes() + (value > 0 ? minutes : -minutes));\n    }\n  }];\n  var parsedPattern = matchers.reduce(function (p, m) {\n    if (m.pattern.test(p.regexp)) {\n      m.index = p.regexp.match(m.pattern).index;\n      p.regexp = p.regexp.replace(m.pattern, \"(\" + m.regexp + \")\");\n    } else {\n      m.index = -1;\n    }\n\n    return p;\n  }, {\n    regexp: pattern,\n    index: []\n  });\n  var dateFns = matchers.filter(function (m) {\n    return m.index > -1;\n  });\n  dateFns.sort(function (a, b) {\n    return a.index - b.index;\n  });\n  var matcher = new RegExp(parsedPattern.regexp);\n  var matches = matcher.exec(str);\n\n  if (matches) {\n    var date = missingValuesDate || module.exports.now();\n    dateFns.forEach(function (f, i) {\n      f.fn(date, matches[i + 1]);\n    });\n    return date;\n  }\n\n  throw new Error(\"String '\" + str + \"' could not be parsed as '\" + pattern + \"'\");\n}\n\nfunction parse(pattern, str, missingValuesDate) {\n  if (!pattern) {\n    throw new Error(\"pattern must be supplied\");\n  }\n\n  return extractDateParts(pattern, str, missingValuesDate);\n}\n/**\n * Used for testing - replace this function with a fixed date.\n */\n\n\nfunction now() {\n  return new Date();\n}\n\nmodule.exports = asString;\nmodule.exports.asString = asString;\nmodule.exports.parse = parse;\nmodule.exports.now = now;\nmodule.exports.ISO8601_FORMAT = \"yyyy-MM-ddThh:mm:ss.SSS\";\nmodule.exports.ISO8601_WITH_TZ_OFFSET_FORMAT = \"yyyy-MM-ddThh:mm:ss.SSSO\";\nmodule.exports.DATETIME_FORMAT = \"dd MM yyyy hh:mm:ss.SSS\";\nmodule.exports.ABSOLUTETIME_FORMAT = \"hh:mm:ss.SSS\";","map":{"version":3,"sources":["/Users/osurihimeshkrishna/Downloads/Academics/8th Semester/Software Production Engineering/spe_finalproject/my-app/node_modules/streamroller/node_modules/date-format/lib/index.js"],"names":["padWithZeros","vNumber","width","numAsString","toString","length","addZero","offset","timezoneOffset","os","Math","abs","h","String","floor","m","datePart","date","displayUTC","part","asString","format","module","exports","ISO8601_FORMAT","now","indexOf","vDay","vMonth","vYearLong","vYearShort","substring","vYear","vHour","vMinute","vSecond","vMillisecond","vTimeZone","getTimezoneOffset","formatted","replace","extractDateParts","pattern","str","missingValuesDate","matchers","regexp","fn","value","setFullYear","setMonth","setDate","setHours","setMinutes","setSeconds","setMilliseconds","minutes","getMinutes","parsedPattern","reduce","p","test","index","match","dateFns","filter","sort","a","b","matcher","RegExp","matches","exec","forEach","f","i","Error","parse","Date","ISO8601_WITH_TZ_OFFSET_FORMAT","DATETIME_FORMAT","ABSOLUTETIME_FORMAT"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction padWithZeros(vNumber, width) {\n  var numAsString = vNumber.toString();\n  while (numAsString.length < width) {\n    numAsString = \"0\" + numAsString;\n  }\n  return numAsString;\n}\n\nfunction addZero(vNumber) {\n  return padWithZeros(vNumber, 2);\n}\n\n/**\n * Formats the TimeOffset\n * Thanks to http://www.svendtofte.com/code/date_format/\n * @private\n */\nfunction offset(timezoneOffset) {\n  var os = Math.abs(timezoneOffset);\n  var h = String(Math.floor(os / 60));\n  var m = String(os % 60);\n  if (h.length === 1) {\n    h = \"0\" + h;\n  }\n  if (m.length === 1) {\n    m = \"0\" + m;\n  }\n  return timezoneOffset < 0 ? \"+\" + h + m : \"-\" + h + m;\n}\n\nfunction datePart(date, displayUTC, part) {\n  return displayUTC ? date[\"getUTC\" + part]() : date[\"get\" + part]();\n}\n\nfunction asString(format, date) {\n  if (typeof format !== \"string\") {\n    date = format;\n    format = module.exports.ISO8601_FORMAT;\n  }\n  if (!date) {\n    date = module.exports.now();\n  }\n\n  var displayUTC = format.indexOf(\"O\") > -1;\n\n  var vDay = addZero(datePart(date, displayUTC, \"Date\"));\n  var vMonth = addZero(datePart(date, displayUTC, \"Month\") + 1);\n  var vYearLong = addZero(datePart(date, displayUTC, \"FullYear\"));\n  var vYearShort = addZero(vYearLong.substring(2, 4));\n  var vYear = format.indexOf(\"yyyy\") > -1 ? vYearLong : vYearShort;\n  var vHour = addZero(datePart(date, displayUTC, \"Hours\"));\n  var vMinute = addZero(datePart(date, displayUTC, \"Minutes\"));\n  var vSecond = addZero(datePart(date, displayUTC, \"Seconds\"));\n  var vMillisecond = padWithZeros(\n    datePart(date, displayUTC, \"Milliseconds\"),\n    3\n  );\n  var vTimeZone = offset(date.getTimezoneOffset());\n  var formatted = format\n    .replace(/dd/g, vDay)\n    .replace(/MM/g, vMonth)\n    .replace(/y{1,4}/g, vYear)\n    .replace(/hh/g, vHour)\n    .replace(/mm/g, vMinute)\n    .replace(/ss/g, vSecond)\n    .replace(/SSS/g, vMillisecond)\n    .replace(/O/g, vTimeZone);\n  return formatted;\n}\n\nfunction extractDateParts(pattern, str, missingValuesDate) {\n  var matchers = [\n    {\n      pattern: /y{1,4}/,\n      regexp: \"\\\\d{1,4}\",\n      fn: function(date, value) {\n        date.setFullYear(value);\n      }\n    },\n    {\n      pattern: /MM/,\n      regexp: \"\\\\d{1,2}\",\n      fn: function(date, value) {\n        date.setMonth(value - 1);\n      }\n    },\n    {\n      pattern: /dd/,\n      regexp: \"\\\\d{1,2}\",\n      fn: function(date, value) {\n        date.setDate(value);\n      }\n    },\n    {\n      pattern: /hh/,\n      regexp: \"\\\\d{1,2}\",\n      fn: function(date, value) {\n        date.setHours(value);\n      }\n    },\n    {\n      pattern: /mm/,\n      regexp: \"\\\\d\\\\d\",\n      fn: function(date, value) {\n        date.setMinutes(value);\n      }\n    },\n    {\n      pattern: /ss/,\n      regexp: \"\\\\d\\\\d\",\n      fn: function(date, value) {\n        date.setSeconds(value);\n      }\n    },\n    {\n      pattern: /SSS/,\n      regexp: \"\\\\d\\\\d\\\\d\",\n      fn: function(date, value) {\n        date.setMilliseconds(value);\n      }\n    },\n    {\n      pattern: /O/,\n      regexp: \"[+-]\\\\d{3,4}|Z\",\n      fn: function(date, value) {\n        if (value === \"Z\") {\n          value = 0;\n        }\n        var offset = Math.abs(value);\n        var minutes = (offset % 100) + Math.floor(offset / 100) * 60;\n        date.setMinutes(date.getMinutes() + (value > 0 ? minutes : -minutes));\n      }\n    }\n  ];\n\n  var parsedPattern = matchers.reduce(\n    function(p, m) {\n      if (m.pattern.test(p.regexp)) {\n        m.index = p.regexp.match(m.pattern).index;\n        p.regexp = p.regexp.replace(m.pattern, \"(\" + m.regexp + \")\");\n      } else {\n        m.index = -1;\n      }\n      return p;\n    },\n    { regexp: pattern, index: [] }\n  );\n\n  var dateFns = matchers.filter(function(m) {\n    return m.index > -1;\n  });\n  dateFns.sort(function(a, b) {\n    return a.index - b.index;\n  });\n\n  var matcher = new RegExp(parsedPattern.regexp);\n  var matches = matcher.exec(str);\n  if (matches) {\n    var date = missingValuesDate || module.exports.now();\n    dateFns.forEach(function(f, i) {\n      f.fn(date, matches[i + 1]);\n    });\n    return date;\n  }\n\n  throw new Error(\n    \"String '\" + str + \"' could not be parsed as '\" + pattern + \"'\"\n  );\n}\n\nfunction parse(pattern, str, missingValuesDate) {\n  if (!pattern) {\n    throw new Error(\"pattern must be supplied\");\n  }\n\n  return extractDateParts(pattern, str, missingValuesDate);\n}\n\n/**\n * Used for testing - replace this function with a fixed date.\n */\nfunction now() {\n  return new Date();\n}\n\nmodule.exports = asString;\nmodule.exports.asString = asString;\nmodule.exports.parse = parse;\nmodule.exports.now = now;\nmodule.exports.ISO8601_FORMAT = \"yyyy-MM-ddThh:mm:ss.SSS\";\nmodule.exports.ISO8601_WITH_TZ_OFFSET_FORMAT = \"yyyy-MM-ddThh:mm:ss.SSSO\";\nmodule.exports.DATETIME_FORMAT = \"dd MM yyyy hh:mm:ss.SSS\";\nmodule.exports.ABSOLUTETIME_FORMAT = \"hh:mm:ss.SSS\";\n"]},"metadata":{},"sourceType":"script"}